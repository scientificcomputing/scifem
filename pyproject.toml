[build-system]
requires = ["scikit-build-core[pyproject]>=0.4.3", "nanobind>=1.3.2"]
build-backend = "scikit_build_core.build"

[project]
name = "scifem"
version = "0.2.14"
description = "Scientific tools for finite element methods"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [
    { email = "dokken@simula.no", name = "Jørgen S. Dokken" },
    { email = "henriknf@simula.no", name = "Henrik N.T. Finsberg" },
]
dependencies = ["fenics-dolfinx", "numpy", "packaging"]

[project.urls]
repository = "https://github.com/scientificcomputing/scifem.git"

[project.optional-dependencies]
h5py = ["h5py"]
adios2 = ["adios2"]
docs = ["jupyter-book", "jupytext", "pyvista[jupyter]", "sphinxcontrib-bibtex"]
dev = ["ruff", "mypy", "bump-my-version", "pre-commit"]
test = ["pytest", "petsc4py", "h5py"]
all = ["scifem[docs,dev,test,audio2,h5py]"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.scikit-build]
minimum-version = "0.5"
cmake.minimum-version = "3.19.0"


[tool.mypy]
ignore_missing_imports = true


[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    "examples",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = ["E402", "E741", "E743", "E731"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.ruff.lint.isort]
known-first-party = ["scifem"]
known-third-party = [
    "basix",
    "dolfinx",
    "ffcx",
    "ufl",
    "gmsh",
    "numpy",
    "pytest",
]
section-order = [
    "future",
    "standard-library",
    "mpi",
    "third-party",
    "first-party",
    "local-folder",
]
[tool.ruff.lint.isort.sections]
"mpi" = ["mpi4py", "petsc4py"]


[tool.bumpversion]
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
current_version = "0.2.14"


[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'
